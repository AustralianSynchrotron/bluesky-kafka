# See https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html and
#     https://docs.confluent.io/platform/current/installation/configuration/consumer-configs.html
CONFIG_KEY_WHITELIST = {
    # -- Common Keys
    "bootstrap.servers",
    # "ssl.key.password",
    # "ssl.keystore.certificate.chain",
    # "ssl.keystore.key",
    # "ssl.keystore.location",
    # "ssl.keystore.password",
    # "ssl.truststore.certificates",
    # "ssl.truststore.location",
    # "ssl.truststore.password",
    "client.dns.lookup",
    "client.id",
    "connections.max.idle.ms",
    "receive.buffer.bytes",
    "request.timeout.ms",
    # "sasl.client.callback.handler.class",
    # "sasl.jaas.config",
    # "sasl.kerberos.service.name",
    # "sasl.login.callback.handler.class",
    # "sasl.login.class",
    # "sasl.mechanism",
    # "sasl.oauthbearer.jwks.endpoint.url",
    # "sasl.oauthbearer.token.endpoint.url",
    "security.protocol",
    "send.buffer.bytes",
    "socket.connection.setup.timeout.max.ms",
    "socket.connection.setup.timeout.ms",
    # "ssl.enabled.protocols",
    # "ssl.keystore.type",
    # "ssl.protocol",
    # "ssl.provider",
    # "ssl.truststore.type",
    "auto.include.jmx.reporter",
    "enable.metrics.push",
    "interceptor.classes",
    "metadata.max.age.ms",
    "metric.reporters",
    "metrics.num.samples",
    "metrics.recording.level",
    "metrics.sample.window.ms",
    "reconnect.backoff.max.ms",
    "reconnect.backoff.ms",
    "retry.backoff.max.ms",
    "retry.backoff.ms",
    # "sasl.kerberos.kinit.cmd",
    # "sasl.kerberos.min.time.before.relogin",
    # "sasl.kerberos.ticket.renew.jitter",
    # "sasl.kerberos.ticket.renew.window.factor",
    # "sasl.login.connect.timeout.ms",
    # "sasl.login.read.timeout.ms",
    # "sasl.login.refresh.buffer.seconds",
    # "sasl.login.refresh.min.period.seconds",
    # "sasl.login.refresh.window.factor",
    # "sasl.login.refresh.window.jitter",
    # "sasl.login.retry.backoff.max.ms",
    # "sasl.login.retry.backoff.ms",
    # "sasl.oauthbearer.clock.skew.seconds",
    # "sasl.oauthbearer.expected.audience",
    # "sasl.oauthbearer.expected.issuer",
    # "sasl.oauthbearer.jwks.endpoint.refresh.ms",
    # "sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms",
    # "sasl.oauthbearer.jwks.endpoint.retry.backoff.ms",
    # "sasl.oauthbearer.scope.claim.name",
    # "sasl.oauthbearer.sub.claim.name",
    # "security.providers",
    # "ssl.cipher.suites",
    # "ssl.endpoint.identification.algorithm",
    # "ssl.engine.factory.class",
    # "ssl.keymanager.algorithm",
    # "ssl.secure.random.implementation",
    # "ssl.trustmanager.algorithm",
    # -- Consumer Keys
    "key.deserializer",
    "value.deserializer",
    "fetch.min.bytes",
    "group.id",
    "group.protocol",
    "heartbeat.interval.ms",
    "max.partition.fetch.bytes",
    "session.timeout.ms",
    "allow.auto.create.topics",
    "auto.offset.reset",
    "default.api.timeout.ms",
    "enable.auto.commit",
    "exclude.internal.topics",
    "fetch.max.bytes",
    "group.instance.id",
    "group.remote.assignor",
    "isolation.level",
    "max.poll.interval.ms",
    "max.poll.records",
    "partition.assignment.strategy",
    "auto.commit.interval.ms",
    "check.crcs",
    "client.rack",
    "fetch.max.wait.ms",
    # -- Producer Keys
    "key.serializer",
    "value.serializer",
    "buffer.memory",
    "compression.type",
    "retries",
    "batch.size",
    "delivery.timeout.ms",
    "linger.ms",
    "max.block.ms",
    "max.request.size",
    "partitioner.class",
    "partitioner.ignore.keys",
    "acks",
    "enable.idempotence",
    "max.in.flight.requests.per.connection",
    "metadata.max.idle.ms",
    "partitioner.adaptive.partitioning.enable",
    "partitioner.availability.timeout.ms",
    "transaction.timeout.ms",
    "transactional.id",
}


def redact_config(config):
    return {k: v if k in CONFIG_KEY_WHITELIST else "****" for k, v in config.items()}
